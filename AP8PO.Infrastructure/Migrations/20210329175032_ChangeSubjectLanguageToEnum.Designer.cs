// <auto-generated />
using System;
using AP8POSecretary.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AP8POSecretary.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210329175032_ChangeSubjectLanguageToEnum")]
    partial class ChangeSubjectLanguageToEnum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CommitmentRate")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDoctorant")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Employee", "Secretary");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterType")
                        .HasColumnType("int");

                    b.Property<string>("Shortcut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentsCount")
                        .HasColumnType("int");

                    b.Property<int>("StudyType")
                        .HasColumnType("int");

                    b.Property<int>("StudyYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Group", "Secretary");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.GroupSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubjectId");

                    b.ToTable("GroupSubject", "Secretary");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassSize")
                        .HasColumnType("int");

                    b.Property<int>("CompletionType")
                        .HasColumnType("int");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("LectureCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PractiseCount")
                        .HasColumnType("int");

                    b.Property<int>("SeminareCount")
                        .HasColumnType("int");

                    b.Property<string>("Shortcut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeeksCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subject", "Secretary");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.WorkingLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("EmploymentPoints")
                        .HasColumnType("float");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<int>("HoursCount")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentsCount")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("WorkingLabel", "Secretary");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.GroupSubject", b =>
                {
                    b.HasOne("AP8POSecretary.Domain.Entities.Group", "Group")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP8POSecretary.Domain.Entities.Subject", "Subject")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.WorkingLabel", b =>
                {
                    b.HasOne("AP8POSecretary.Domain.Entities.Employee", "Employee")
                        .WithMany("WorkingLabels")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AP8POSecretary.Domain.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Employee", b =>
                {
                    b.Navigation("WorkingLabels");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Group", b =>
                {
                    b.Navigation("GroupSubjects");
                });

            modelBuilder.Entity("AP8POSecretary.Domain.Entities.Subject", b =>
                {
                    b.Navigation("GroupSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
